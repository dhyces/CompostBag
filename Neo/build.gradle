plugins {
    id 'java'
    id 'eclipse'
    id 'maven-publish'
    id 'dev.architectury.loom'
}

base {
    archivesName = "${mod_name}-Neo-${minecraft_version}"
}

loom {
    neoForge {
        accessTransformer(project.file('src/main/resources/META-INF/accesstransformer.cfg'))
    }
    runs {
        client {
            client()
            setConfigName("Neo Client")
            ideConfigGenerated(true)
            runDir("run")
        }
        server {
            server()
            setConfigName("Neo Server")
            ideConfigGenerated(true)
            runDir("runServer")
        }
    }
}


sourceSets.main.resources.srcDir 'src/generated/resources'

repositories {
    maven {
        name = 'Neo'
        url = 'https://maven.neoforged.net/releases'
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    neoForge "net.neoforged:neoforge:${neo_version}"
    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-1.20.2:2023.12.10@zip")
    }

    compileOnly project(":Common")
}

tasks.withType(JavaCompile).configureEach {
    source(project(":Common").sourceSets.main.allSource)
}
tasks.withType(Javadoc).configureEach {
    source(project(":Common").sourceSets.main.allJava)
}
tasks.named("sourcesJar", Jar) {
    from(project(":Common").sourceSets.main.allSource)
}

processResources {
    from project(":Common").sourceSets.main.resources
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.archivesBaseName
            version project.version
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://" + System.getenv("local_maven")
        }
    }
}
