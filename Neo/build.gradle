plugins {
    id 'java'
    id 'eclipse'
    id 'maven-publish'
    id 'net.neoforged.gradle.userdev'
}

base {
    archivesName = "${mod_name}-Neo-${minecraft_version}"
}

minecraft.accessTransformers.file project.file('src/main/resources/META-INF/accesstransformer.cfg')

runs {
    configureEach {
        workingDirectory project.file('run')
//        ideaModule "${rootProject.name}.${project.name}.main"

        systemProperty 'forge.logging.markers', 'REGISTRIES'
        systemProperty 'forge.logging.console.level', 'debug'
        systemProperty 'mixin.env.remapRefMap', 'true'
        systemProperty 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

        modSource project.sourceSets.main
    }

    client {
        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
    }

    server {
        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
        programArgument '--nogui'
    }

    gameTestServer {
        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
    }

    data {
        programArguments.addAll '--mod', project.mod_id, '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
    }
}
//
//minecraft {
//    mappings channel: "${mappings_id}", version: "${mappings_version}"
//
//    runs {
//        client {
//            workingDirectory project.file('run')
//
//            taskName 'Client'
//
//            mods {
//                modClientRun {
//                    source sourceSets.main
//                    source project(":Common").sourceSets.main
//                }
//            }
//        }
//
//        server {
//            workingDirectory project.file('run')
//            ideaModule "${rootProject.name}.${project.name}.main"
//            taskName 'Server'
//            property 'mixin.env.remapRefMap', 'true'
//            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
//            mods {
//                modServerRun {
//                    source sourceSets.main
//                    source project(":Common").sourceSets.main
//                }
//            }
//        }
//
//        data {
//            workingDirectory project.file('run')
//            ideaModule "${rootProject.name}.${project.name}.main"
//            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
//            taskName 'Data'
//            property 'mixin.env.remapRefMap', 'true'
//            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
//            mods {
//                modDataRun {
//                    source sourceSets.main
//                    source project(":Common").sourceSets.main
//                }
//            }
//        }
//    }
//}

sourceSets.main.resources.srcDir 'src/generated/resources'

dependencies {
    implementation "net.neoforged:neoforge:${neo_version}"

    compileOnly project(":Common")
}

tasks.withType(JavaCompile).configureEach {
    source(project(":Common").sourceSets.main.allSource)
}
tasks.withType(Javadoc).configureEach {
    source(project(":Common").sourceSets.main.allJava)
}
tasks.named("sourcesJar", Jar) {
    from(project(":Common").sourceSets.main.allSource)
}

processResources {
    from project(":Common").sourceSets.main.resources
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.archivesBaseName
            version project.version
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://" + System.getenv("local_maven")
        }
    }
}
