plugins {
    id 'java'
    id 'eclipse'
    id 'maven-publish'
//    id 'net.neoforged.gradle.userdev'
    id 'dev.architectury.loom'
}

base {
    archivesName = "${mod_name}-Neo-${minecraft_version}"
}

//minecraft.accessTransformers.file project.file('src/main/resources/META-INF/accesstransformer.cfg')

loom {
    neoForge {
        accessTransformer(project.file('src/main/resources/META-INF/accesstransformer.cfg'))
    }
    runs {
        client {
            client()
            setConfigName("Neo Client")
            ideConfigGenerated(true)
            runDir("run")
        }
        server {
            server()
            setConfigName("Neo Server")
            ideConfigGenerated(true)
            runDir("runServer")
        }
    }
}

//runs {
//    configureEach {
//        workingDirectory project.file('run')
////        ideaModule "${rootProject.name}.${project.name}.main"
//
//        systemProperty 'forge.logging.markers', 'REGISTRIES'
//        systemProperty 'forge.logging.console.level', 'debug'
//        systemProperty 'mixin.env.remapRefMap', 'true'
//        systemProperty 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
//
//        modSource project.sourceSets.main
//    }
//
//    client {
//        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
//    }
//
//    server {
//        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
//        programArgument '--nogui'
//    }
//
//    gameTestServer {
//        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
//    }
//
//    data {
//        programArguments.addAll '--mod', project.mod_id, '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
//    }
//}

sourceSets.main.resources.srcDir 'src/generated/resources'

//dependencies {
//    implementation "net.neoforged:neoforge:${neo_version}"
//
//    compileOnly project(":Common")
//}

repositories {
    maven {
        name = 'Neo'
        url = 'https://maven.neoforged.net/releases'
    }
}

dependencies {
    minecraft "com.mojang:minecraft:1.20.3"
    neoForge "net.neoforged:neoforge:${neo_version}"
    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-1.20.1:2023.08.20@zip")
    }

    compileOnly project(":Common")
}

tasks.withType(JavaCompile).configureEach {
    source(project(":Common").sourceSets.main.allSource)
}
tasks.withType(Javadoc).configureEach {
    source(project(":Common").sourceSets.main.allJava)
}
tasks.named("sourcesJar", Jar) {
    from(project(":Common").sourceSets.main.allSource)
}

processResources {
    from project(":Common").sourceSets.main.resources
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.archivesBaseName
            version project.version
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://" + System.getenv("local_maven")
        }
    }
}
